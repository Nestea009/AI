{"version":3,"sources":["main.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","return","isArray","click_var","document","addEventListener","button","getElementById","clicked","money","Algorithm","reward","weights","Math","random","biasses","weights2","biasses2","creativity","creativity_weight","_AI_prototype","AI_prototype","_AI_prototype2","new_weights","new_biasses","new_weights2","new_biasses2","new_reward","_AI_prototype3","_AI_prototype4","new_weightsN","new_biassesN","new_weights2N","new_biasses2N","new_rewardN","node1","inputLayer","hidden1","hidden2","output1","output2","outputLayer","console","log"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nlet click_var = false;\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const button = document.getElementById('example');\n  button.addEventListener('click', clicked);\n});\n\nfunction clicked() {\n  money += 1;\n  click_var = true;\n  Algorithm(money);\n}\n\nlet money = 0;\n\n\nfunction Algorithm(money){\n\n  let reward = 0;\n\n  //Generate some random weights\n  \n  let weights = [Math.random(), Math.random(), Math.random(), Math.random()]\n  let biasses = [Math.random(), Math.random(), Math.random(), Math.random()]\n\n  let weights2 = [Math.random(), Math.random(), Math.random(), Math.random()]\n  let biasses2 = [Math.random(), Math.random(), Math.random(), Math.random()]\n\n  //Start an AI protorype that gets set weights and mutates them a bit\n\n\n  //Run our prototype twice and compare the results\n  //The best one survives and the cycle repeats\n\n  for(let i = 0; i < 10; i++){\n\n    let creativity = 1;\n    let creativity_weight = 2;\n\n    let [new_weights, new_biasses, new_weights2, new_biasses2, new_reward] = AI_prototype(weights, biasses, weights2, biasses2, money, creativity, creativity_weight);\n    let [new_weightsN, new_biassesN, new_weights2N, new_biasses2N, new_rewardN] = AI_prototype(weights, biasses, weights2, biasses2, money, creativity, creativity_weight);\n    if(new_reward > new_rewardN){\n      weights = new_weights;\n      biasses = new_biasses;\n      weights2 = new_weights2;\n      biasses2 = new_biasses2;\n    }\n    else{\n      weights = new_weightsN;\n      biasses = new_biassesN;\n      weights2 = new_weights2N;\n      biasses2 = new_biasses2N;\n    }\n\n    creativity = creativity / 1.5;\n    creativity_weight = creativity_weight / 1.5;\n  }\n\n  function AI_prototype(weights, biasses, weights2, biasses2, money, creativity, creativity_weight){\n\n    //Start off with the money input and the CanYouBuyAHouse input\n\n    let node1 = 0;\n\n    let inputLayer = [node1, money];\n\n    //Creativity will determine how much we change the weights and biasses\n\n\n\n    //We create new weights based on creativity and the default weights\n\n    weights = [(weights[0] * (Math.random() * creativity_weight)), (weights[1] * (Math.random() * creativity_weight)), (weights[2] * (Math.random() * creativity_weight)), (weights[3] * (Math.random() * creativity_weight))]\n    biasses = [(biasses[0] * (Math.random() * creativity)), (biasses[1] * (Math.random() * creativity)), (biasses[2] * (Math.random() * creativity)), (biasses[3] * (Math.random() * creativity))]\n\n    //We make the hidden nodes\n\n    let hidden1 = ((node1 * weights[0] + biasses[0]) + (money * weights[1] + biasses[1]));\n    let hidden2 = ((node1 * weights[3] + biasses[3]) + (money * weights[2] + biasses[2]));\n\n    //We create new weights based on creativity and the previous weights\n    \n    weights2 = [(weights2[0] * (Math.random() * creativity_weight)), (weights2[1] * (Math.random() * creativity_weight)), (weights2[2] * (Math.random() * creativity_weight)), (weights2[3] * (Math.random() * creativity_weight))]\n    biasses2 = [(biasses2[0] * (Math.random() * creativity)), (biasses2[1] * (Math.random() * creativity)), (biasses2[2] * (Math.random() * creativity)), (biasses2[3] * (Math.random() * creativity))]\n    \n    //We make the output nodes\n\n    let output1 = ((hidden1 * weights2[0] + biasses2[0]) + (hidden2 * weights2[1] + biasses2[1]));\n    let output2 = ((hidden1 * weights2[2] + biasses2[2]) + (hidden2 * weights2[3] + biasses2[3]));\n  \n    let outputLayer = [output1, output2];\n  \n    console.log(outputLayer);\n\n    //Reward the AI if it clicks the button or if it would buy the house when it needs to\n\n    //if(output1 > 1){\n      //console.log(\"Wins Money!\")\n      //reward += 1;\n    //}\n    //else{\n      //console.log(\"Looses Money!\")\n      //reward -= 1;\n    //}\n\n    //if(output2 > 1){\n      //console.log(\"Would buy the house!\")\n      //reward -= 1;\n    //}\n    //else{\n      //console.log(\"Wouldn't buy the house\")\n      //reward += 1;\n    //}\n\n    reward = output1 + output2;\n\n    //We return all of the values below, so that the new AI will take them as default\n\n    return [weights, biasses, weights2, biasses2, reward]\n  }\n  \n\n}"]}